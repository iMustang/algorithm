package datastructure;

/**
 * @title: BinaryTreeSchema
 * @description: 二叉树大纲
 */
public class BinaryTreeSchema {
	/**
	 * 二叉树是结点最多只有两个子结点的树。
	 * 二叉树具有5种基本形态：
	 *     空二叉树
	 *     只有一个根节点
	 *     根节点只有左子树
	 *     根节点只有右子树
	 *     根节点既有左子树，又有右子树
	 *
	 * 特殊的二叉树：
	 *     斜树：所有结点都只有左子树的二叉树叫做左斜树、只有右子树的二叉树叫做右斜树。
	 *     满二叉树：所有分支结点都有左子树、右子树，并且所有叶子都在同一层上。
	 *     完全二叉树：见完全二叉树.png
	 *
	 * 二叉树的存储结构：
	 *     顺序存储：用数组表示二叉树，数组的下表就能体现结点之间的逻辑关系，2n+1,2n+2表示结点n的左右孩子。见BinaryTree.java
	 *     二叉链表
	 *
	 * 二叉树的线索化：见ThreadedBinaryTree.java
	 *
	 * 赫夫曼树：带权路径长度最小的二叉树。
	 *
	 * 二叉排序树（二叉查找树）（Binary Search Tree）：是一棵空树，或是具有如下性质的树：
	 *     若左子树不为空，则左子树上的所有结点值小于根节点的值。
	 *     若右子树不为空，则右子树上的所有结点值大于根节点的值。
	 *     它的左右子树也分别为二叉排序树。
	 *
	 *     二叉排序树可以做到在查找时，插入、删除元素效率高。
	 *     二叉排序树的中序遍历是有序集合。
	 *
	 *     平衡二叉树（AVL树）：是一种二叉排序树，其中每一个结点的左子树和右子树的高度差至多为1。平衡因子BF是结点上的左子树高度减去右子树高度。
	 *
	 *
	 *
	 *
	 */
}
